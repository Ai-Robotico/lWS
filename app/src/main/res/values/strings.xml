<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">lWS</string>
    <string name="hello">lightweight Web Server (lWS)</string>

    <!-- Default document root index
    %1$d    default document root path
    -->
    <string name="def_doc_root_index"><![CDATA["<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\">
    <head>
        <title>lightweight Web Server</title>
        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">
    </head>
    <body>
        <h4>lightweight Web Server (lWS) for Android.</h4>
        <p>Default document root is %1$s</p>    
        <p>Source code available on <a href=\"https://github.com/mvbasov/lWS\">GitHub</a></p>
    </body>
</html>
"]]></string>

    <!-- HTTP header
    %1$d    result code
    %2%d    content length
    %3$s    last modified
    %4$s    content type
    -->
    <string name="header"><![CDATA["HTTP/1.1 %1$s
Server: lWS/1.0
Accept-Ranges: bytes
Content-Length: %2$d
Last-Modified: %3$s
Connection: close
Content-Type: %4$s

"]]></string>

    <!-- HTTP header with partial content
    %1$d    result code
    %2$d    content range
    %3$d    content length
    %4$s    content type
    -->
    <string name="header_partial"><![CDATA["HTTP/1.1 %1$s%2$s
Content-Length: %3$d
Content-Type: %4$s

"]]></string>

    <!-- Range header
    %1$s    boundary string
    %2$s    content type
    %3$d    begin
    %4$d    end
    %5$d    length
    -->
    <string name="range_header"><![CDATA["--%1$s
Content-Type: %2$s
Content-Range: bytes %3$d-%4$d/%5$d

"]]></string>

    <string name="boundary_string">da_zarasti_ono_ramashkami</string>

    <!-- Directory listing top part
    %1$s    HTML title
    %2$s    Title on page
    %2$s    Parent Directory string
    -->
    <string name="dir_list_top_html"><![CDATA["<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\">

<head>
    <title>Index of /%1$s</title>
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">

    <style>
.icon_file {
    width: 16px;
    height: 16px;
}
.icon_arrow {
    width: 12px;
    height: 12px;
}
td.date, td.size {
    padding-left: 0.7em;
}
td.size {
    text-align: right;
}
th {
    text-decoration: underline;
    color: #0000ee;
}
tbody>tr:nth-child(odd) {
    background-color: #f0f0f0;
}
    </style>
    <script type=\"text/javascript\">
    function sortPart(ascending, columnClassName, tbody, rows) {
        var unsorted = true;
        while (unsorted) {
            unsorted = false

            for (var r = 0; r < rows.length - 1; r++) {
                var row = rows[r];
                var nextRow = rows[r + 1];

                switch(columnClassName) {
                    case 'name':
                        var value = row.getElementsByClassName(columnClassName)[0].getElementsByTagName('a')[0].innerHTML;
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].getElementsByTagName('a')[0].innerHTML;
                        break;
                    case 'date':
                        var value = row.getElementsByClassName(columnClassName)[0].innerHTML;
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].innerHTML;
                        break;
                    case 'size':
                        var value = row.getElementsByClassName(columnClassName)[0].getElementsByTagName('span')[0].getAttribute('value');
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].getElementsByTagName('span')[0].getAttribute('value');
                        if (!isNaN(value)) {
                            value = parseInt(value);
                            nextValue = parseInt(nextValue);
                        }

                        break;
                    default:
                        console.log('Ups!!! header id');
                }

                if (ascending ? value > nextValue : value < nextValue) {
                    tbody.insertBefore(nextRow, row);
                    unsorted = true;
                }
            }
        }
    }
    function sort(ascending, columnClassName) {
        var tbody = document.getElementById('content-table').getElementsByTagName('tbody')[0];
        var rows = tbody.getElementsByClassName('file_row');
        sortPart(ascending, columnClassName, tbody, rows)
        var rows = tbody.getElementsByClassName('folder_row');
        sortPart(ascending, columnClassName, tbody, rows)
    };
   function toggle(id) {
        var xlinkns = 'http://www.w3.org/1999/xlink';
        var headElement = document.getElementById(id);
        var order = false;

        var headers = ['hname', 'hdate', 'hsize'];
        for (s in headers) {
            if (headers[s] !== id) {
                    document
                        .getElementById(headers[s]).getElementsByTagName('svg')[0].getElementsByTagName('use')[0].setAttributeNS(xlinkns, 'href', '#empty');
            }
        }

        var svgRef = headElement.getElementsByTagName('svg')[0].getElementsByTagName('use')[0].getAttributeNS(xlinkns, 'href');
        switch (svgRef) {
            case '#empty':
                headElement.getElementsByTagName('svg')[0].getElementsByTagName('use')[0].setAttributeNS(xlinkns, 'href', '#upward');
                order = true;
                break;
            case '#downward':
                headElement.getElementsByTagName('svg')[0].getElementsByTagName('use')[0].setAttributeNS(xlinkns, 'href', '#upward');
                order = true;
                break;
            case '#upward':
                headElement.getElementsByTagName('svg')[0].getElementsByTagName('use')[0].setAttributeNS(xlinkns, 'href', '#downward');
                order = false;
                break;
            default:
                console.log('Ups!!! upward/downward' + svgRef);
        }
        sort(order, id.substring(1));
    }
    </script>
<svg style=\"display:none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">
  <symbol viewBox=\"0 0 24 24\" id=\"downward\">
    <path fill=\"#0000ee\" d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>
  </symbol>
  <symbol viewBox=\"0 0 24 24\" id=\"upward\">
    <path fill=\"#0000ee\" d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"/>
  </symbol>
  <symbol viewBox=\"0 0 18 18\" id=\"file\">
    <path d=\"\"/>
  </symbol>
  <symbol viewBox=\"0 0 18 18\" id=\"folder\">
    <path fill=\"#ffcc00\" stroke=\"black\" d=\"M10 5L8 3H3c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-5z\"/>
  </symbol>
  <symbol viewBox=\"0 0 18 18\" id=\"empty\">
    <path d=\"\"/>
  </symbol>
</svg>
</head>

<body>
<p>Index of <b>/%2$s</b></p>%3$s
<table id=\"content-table\">

    <thead>
    <tr><th colspan=\"4\"><hr /></th></tr>
    <tr>
        <th></th>
        <th id=\"hname\" onclick=\"javascript:toggle(this.id);\">
            Name<svg class=\"icon_arrow\"><use xlink:href=\"#upward\" /></svg>
        </th>
        <th id=\"hdate\" onclick=\"javascript:toggle(this.id);\">
            Date<svg class=\"icon_arrow\"><use xlink:href=\"#empty\" /></svg>
        </th>
        <th id=\"hsize\" onclick=\"javascript:toggle(this.id);\">
            Size<svg class=\"icon_arrow\"><use xlink:href=\"#empty\" /></svg>
        </th>
    </tr>
    <tr><th colspan=\"4\"><hr /></th></tr>
    </thead>

    <tbody>
"]]></string>

    <!-- Directory listing bottom part
    -->
    <string name="dir_list_bottom_html"><![CDATA["    </tbody>
    <tfoot>
    <tr class=\"hr\"><th colspan=\"4\"><hr /></th></tr>
    </tfoot>

</table>
</body>
</html>
"]]></string>

<string name="dir_list_parent_dir"><![CDATA["
<a href=\"../\">Parent Directory</a>"]]></string>

    <!-- File or directory entry template
    %1$s    type (file|folder)
    %2$s    name (need to add / for folder)
    %3$s    url
    %4$s    modification date
    %5$d    size
    %6$s    human readable size
    -->
    <string name="dir_list_item"><![CDATA["    <tr class=\"%1$s_row\"><td><svg class=\"icon_file\"><use xlink:href=\"#%1$s\"/></svg></td><td class=\"name\"><a href=\"%2$s\">%3$s</a></td><td class=\"date\">%4$s</td><td class=\"size\"><span value=\"%5$d\" />%6$s</td></tr>
"]]></string>

    <string name="rc500">500 Internal server error</string>
    <string name="rc404">404 File not found</string>
    <string name="rc403">403 Forbidden</string>
    <string name="rc200">200 OK</string>
    <string name="rc206">206 Partial Content</string>

    <string name="pk_document_root">prefDocumentRoot</string>
    <string name="pk_port">prefPort</string>
    <string name="pk_pref_changed">prefChanged</string>
    <string name="pk_use_directory_pick">prefUseDirectoryPick</string>
    <string name="qrIntentAction">net.basov.lws.qr.ENCODE</string>
    <!-- place holder for fdroid patch -->


    <string name="qrPluginPackage">net.basov.lws.qr.gpm</string>
    <string name="rc416">416 Range Not Satisfiable</string>


    <!-- end of place holder for fdroid patch -->
</resources>
