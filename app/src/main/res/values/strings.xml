<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">lWS</string>
    <string name="hello">lightweight Web Server (lWS)</string>

    <!-- Default document root index
    %1$d    default document root path
    -->
    <string name="def_doc_root_index"><![CDATA["<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\">
    <head>
        <title>lightweight Web Server</title>
        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">
    </head>
    <body>
        <h4>lightweight Web Server (lWS) for Android.</h4>
        <p>Default document root is %1$s</p>    
        <p>Source code available on <a href=\"https://github.com/mvbasov/lWS\">GitHub</a></p>
    </body>
</html>
"]]></string>

    <!-- HTTP header
    %1$d    result code
    %2%d    content length
    %3$s    last modified
    %4$s    content type
    -->
    <string name="header"><![CDATA["HTTP/1.1 %1$s
Server: lWS/1.0
Accept-Ranges: bytes
Content-Length: %2$d
Last-Modified: %3$s
Connection: close
Content-Type: %4$s

"]]></string>

    <!-- HTTP header with partial content
    %1$d    result code
    %2$d    content range
    %3$d    content length
    %4$s    content type
    -->
    <string name="header_partial"><![CDATA["HTTP/1.1 %1$s%2$s
Content-Length: %3$d
Content-Type: %4$s

"]]></string>

    <!-- Range header
    %1$s    boundary string
    %2$s    content type
    %3$d    begin
    %4$d    end
    %5$d    length
    -->
    <string name="range_header"><![CDATA["--%1$s
Content-Type: %2$s
Content-Range: bytes %3$d-%4$d/%5$d

"]]></string>

    <string name="boundary_string">da_zarasti_ono_ramashkami</string>

    <!-- Directory listing top part
    %1$s    HTML title
    %2$s    Title on page
    -->
    <string name="dir_list_top_html"><![CDATA["<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\">

<head>
    <title>Index of /%1$s</title>
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">

    <style>
th.downward {
    background-repeat: no-repeat;
    background-position: right top;
    background-image: url('data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAASklEQVR4Ac3KwQFAAAzF0LSLwx6wCewFAPgDVHJ9RNcu/wWZIONTTo2/kFOS8iplosJPtJHpRMoW9CHCSvrlD1E2LgtRpkTZcmwzxRole4MAT9IAAAAASUVORK5CYII=');
}
th.upward {
    background-repeat: no-repeat;
    background-position: right top;
    background-image: url('data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAAUUlEQVR4AcXKQQ5AUAwA0amDS0+BheAoHExof9KVNN35M9tH79QuyWNrRW47YUEWLnvNmJMZ4bSFzVlGaAgG9i9TJieBGjsYSQoEAjXiL9S3F1+7JU/NtrjRAAAAAElFTkSuQmCC');
}
div.folder {
    background-repeat:no-repeat;
    background-image: url('data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAAKklEQVR4AWMYCHCS4T8cNuBQA5IkrOw/TniCGEX/kRSNKjqBU8lRBvoDAHnfmIpzw90rAAAAAElFTkSuQmCC');
    width: 18px;
    height: 18px;
}
div.file {
    background-repeat:no-repeat;
    background-image: url('data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAANElEQVR4AWMgBZxk+I8EG7Ar+o+mqIGwIgaQMoKKIMoIKMKu7D92SDNFo4pOYFVylITEBgCOQqozpSFV0wAAAABJRU5ErkJggg==');
    width: 18px;
    height: 18px;
}
td.date, td.size {
    padding-left: 0.7em;
}
td.size {
    text-align: right;
}
th {
    text-decoration: underline;
    color: -webkit-link;
}

    </style>
    <script type=\"text/javascript\">
    function sort(ascending, columnClassName) {
        var tbody = document.getElementById('content-table').getElementsByTagName('tbody')[0];
        var rows = tbody.getElementsByClassName('file_row');

        var unsorted = true;
        while (unsorted) {
            unsorted = false

            for (var r = 0; r < rows.length - 1; r++) {
                var row = rows[r];
                var nextRow = rows[r + 1];

                switch(columnClassName) {
                    case 'name':
                        var value = row.getElementsByClassName(columnClassName)[0].getElementsByTagName('a')[0].innerHTML;
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].getElementsByTagName('a')[0].innerHTML;
                        break;
                    case 'date':
                        var value = row.getElementsByClassName(columnClassName)[0].innerHTML;
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].innerHTML;
                        break;
                    case 'size':
                        var value = row.getElementsByClassName(columnClassName)[0].getElementsByTagName('span')[0].getAttribute('value');
                        var nextValue = nextRow.getElementsByClassName(columnClassName)[0].getElementsByTagName('span')[0].getAttribute('value');
                        if (!isNaN(value)) {
                            value = parseInt(value);
                            nextValue = parseInt(nextValue);
                        }

                        break;
                    default:
                        console.log('Ups!!! header id');
                }

                if (ascending ? value > nextValue : value < nextValue) {
                    tbody.insertBefore(nextRow, row);
                    unsorted = true;
                }
            }
        }
    };

    function toggle(id) {
        var headElement = document.getElementById(id);
        var order = false;

        var headers = ['hname', 'hdate', 'hsize'];
        for (s in headers) {
            if (headers[s] !== id)
                    document.getElementById(headers[s]).setAttribute('class', 'none');
        }

        switch (headElement.getAttribute('class')) {
            case 'none':
                headElement.setAttribute('class', 'upward');
                order = true;
                break;
            case 'downward':
                headElement.setAttribute('class', 'upward');
                order = true;
                break;
            case 'upward':
                headElement.setAttribute('class', 'downward');
                order = false;
                break;
            default:
                console.log('Ups!!! upward/downward');
        }
        sort(order, id.substring(1));
    }

    </script>

</head>

<body>
<p>Index of <b>/%2$s</b></p>
<a href=\"../\">Parent Directory</a>
<table id=\"content-table\">

    <thead>
    <tr><th colspan=\"4\"><hr /></th></tr>
    <tr>
        <th></th>
        <th id=\"hname\" class=\"upward\" onclick=\"javascript:toggle(this.id);\">
            Name
        </th>
        <th id=\"hdate\" class=\"none\" onclick=\"javascript:toggle(this.id);\">
            Date
        </th>
        <th id=\"hsize\" class=\"none\" onclick=\"javascript:toggle(this.id);\">
            Size
        </th>
    </tr>
    <tr><th colspan=\"4\"><hr /></th></tr>
    </thead>

    <tbody>
"]]></string>

    <!-- Directory listing bottom part
    -->
    <string name="dir_list_bottom_html"><![CDATA["    </tbody>
    <tr><th colspan=\"4\"><hr /></th></tr>

</table>
</body>
</html>
"]]></string>

    <!-- File or directory entry template
    %1$s    type (file|folder)
    %2$s    name (need to add / for folder)
    %3$s    url
    %4$s    modification date
    %5$d    size
    %6$s    human readable size
    -->
    <string name="dir_list_item"><![CDATA["    <tr class=\"%1$s_row\"><td><div class=\"%1$s\" /></td><td class=\"name\"><a href=\"%2$s\">%3$s</a></td><td class=\"date\">%4$s</td><td class=\"size\"><span value=\"%5$d\" />%6$s</td></tr>
"]]></string>

    <string name="rc500">500 Internal server error</string>
    <string name="rc404">404 File not found</string>
    <string name="rc403">403 Forbidden</string>
    <string name="rc200">200 OK</string>
    <string name="rc206">206 Partial Content</string>

    <string name="pk_document_root">prefDocumentRoot</string>
    <string name="pk_port">prefPort</string>
    <string name="pk_pref_changed">prefChanged</string>
    <string name="pk_use_directory_pick">prefUseDirectoryPick</string>
    <string name="qrIntentAction">net.basov.lws.qr.ENCODE</string>
    <!-- place holder for fdroid patch -->


    <string name="qrPluginPackage">net.basov.lws.qr.gpm</string>
    <string name="rc416">416 Range Not Satisfiable</string>


    <!-- end of place holder for fdroid patch -->
</resources>
